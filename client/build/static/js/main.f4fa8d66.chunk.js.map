{"version":3,"sources":["Components/Login/Login.js","Components/NavBar/NavBar.js","Components/Home/Home.js","Components/Profile/Profile.js","Components/Util/Auth/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","login","history","useHistory","onClick","push","fetch","then","data","console","log","text","NavBar","to","activeClassName","Home","setLoggedIn","type","placeholder","Profile","ProtectedRoute","children","loggedIn","render","location","pathname","state","from","App","useState","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+PAEe,SAASA,EAAMC,GAAQ,IAC7BC,EAASD,EAATC,MACHC,EAAUC,cAad,OAAO,qCACL,wBAAQC,QAZV,WACEH,GAAM,GACNC,EAAQG,KAAK,UAUb,mBACA,wBAAQD,QARV,WACEE,MAAM,cACLC,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,EAAKG,YAM/B,qC,MCbW,SAASC,EAAOZ,GAC7B,OACE,+BACE,6BACE,cAAC,IAAD,CAASa,GAAG,QAAQC,gBAAgB,SAApC,oBAEF,6BACE,cAAC,IAAD,CAASD,GAAG,WAAWC,gBAAgB,SAAvC,0BCZO,SAASC,EAAKf,GAAQ,IAC5BgB,EAAehB,EAAfgB,YAEP,OAAO,qCACL,cAAC,EAAD,IACA,sCACA,uBAAOC,KAAK,OAAOC,YAAY,sBAC/B,wBAAQd,QAAS,kBAAMY,GAAY,IAAnC,uBCNW,SAASG,EAAQnB,GAAQ,IAC9BgB,EAAgBhB,EAAhBgB,YAER,OAAO,qCACL,cAAC,EAAD,IACA,yCACA,uBAAOC,KAAK,OAAOC,YAAY,sBAC/B,wBAAQd,QAAS,kBAAMY,GAAY,IAAnC,uBCJW,SAASI,EAAepB,GAAQ,IACrCqB,EAAuBrB,EAAvBqB,SAAUC,EAAatB,EAAbsB,SAClB,OACE,cAAC,IAAD,CACEC,OAAQ,gBAAEC,EAAF,EAAEA,SAAF,OACNF,EACED,EAEA,cAAC,IAAD,CACCR,GAAI,CACFY,SAAU,IACVC,MAAO,CAAEC,KAAMH,S,MCgBbI,MApBf,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNP,EADM,KACIN,EADJ,KAIb,OACE,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,IAAlB,SACE,cAAChC,EAAD,CAAOE,MAAOe,MAEhB,cAACI,EAAD,CAAgBU,OAAK,EAACC,KAAK,QAAQT,SAAUA,EAA7C,SACE,cAACP,EAAD,CAAMC,YAAaA,MAErB,cAACI,EAAD,CAAgBU,OAAK,EAACC,KAAK,WAAWT,SAAUA,EAAhD,SACE,cAACH,EAAD,CAASH,YAAaA,YCdnBgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASjB,OACP,cAAC,IAAMkB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.f4fa8d66.chunk.js","sourcesContent":["import { useHistory } from \"react-router-dom\"; \nimport React from 'react'; \nexport default function Login(props) { \n  const {login} = props; \n  let history = useHistory(); \n\n  function handleLoginClick() { \n    login(true) \n    history.push(\"/home\")\n  }\n\n  function handleTwitterLoginClick() { \n    fetch(\"/api/tweet\")\n    .then(data => console.log(data.text()))\n  }\n\n\n  return(<>\n    <button onClick={handleLoginClick}>Login</button>\n    <button onClick={handleTwitterLoginClick}>Sign in with Twitter</button>\n  </>); \n}","import \"./NavBar.css\"; \nimport { \n  NavLink\n} from \"react-router-dom\";\n\n\nexport default function NavBar(props) { \n  return(\n    <ul>\n      <li>\n        <NavLink to=\"/home\" activeClassName=\"active\">home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/profile\" activeClassName=\"active\">profile</NavLink>\n      </li>\n    </ul>\n  ); \n\n}","import NavBar from \"../NavBar/NavBar\"; \nexport default function Home(props) { \n  const {setLoggedIn} = props; \n\n  return(<>\n    <NavBar/>\n    <h1>Home</h1>\n    <input type=\"text\" placeholder=\"search twitter...\"/>\n    <button onClick={() => setLoggedIn(false)}>Logout</button>\n  </>); \n}","import NavBar from \"../NavBar/NavBar\"; \n\nexport default function Profile(props) { \n  const { setLoggedIn } = props; \n\n  return(<>\n    <NavBar/>\n    <h1>Profile</h1>\n    <input type=\"text\" placeholder=\"search twitter...\"/>\n    <button onClick={() => setLoggedIn(false)}>Logout</button>\n  </>); \n}","import { \n  Route, \n  Redirect,\n} from \"react-router-dom\"; \n\nexport default function ProtectedRoute(props) { \n  const { children, loggedIn } = props; \n  return( \n    <Route\n      render={({location}) => \n        loggedIn ? ( \n          children\n        ) : ( \n          <Redirect \n           to={{\n             pathname: \"/\", \n             state: { from: location }\n           }}\n          />\n        )\n      }\n    />\n  );\n\n}","import {useState} from 'react'; \nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route\n} from \"react-router-dom\"; \nimport Login from \"./Components/Login/Login\"; \nimport Home from \"./Components/Home/Home\"; \nimport Profile from \"./Components/Profile/Profile\"; \nimport ProtectedRoute from \"./Components/Util/Auth/ProtectedRoute\"; \nimport './App.css';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false); \n\n\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login login={setLoggedIn}/>\n          </Route>\n          <ProtectedRoute exact path=\"/home\" loggedIn={loggedIn} >\n            <Home setLoggedIn={setLoggedIn}/>\n          </ProtectedRoute>\n          <ProtectedRoute exact path=\"/profile\" loggedIn={loggedIn} >\n            <Profile setLoggedIn={setLoggedIn}/>\n          </ProtectedRoute>\n        </Switch>\n    </Router>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}