{"version":3,"sources":["Components/Util/UI/Buttons/Button.js","images/TwitterLogoWhite.png","images/TwitterLogoBlue.png","Components/Login/Login.js","Components/Util/UI/Modals/Modal.js","Components/Tweets/NewTweet/NewTweet.js","Components/NavBar/NavBar.js","Components/Tweets/TendingTweet/TrendingTweetItem/TrendingTweet.js","Components/Tweets/TendingTweet/TrendingTweetsList/TrendingTweetsList.js","Components/TweetSearch/TweetSearch.js","Components/Home/Home.js","Components/Profile/Details/Details.js","Components/Profile/Profile.js","Components/Util/Auth/ProtectedRoute.js","Components/Util/Auth/GetCredentials.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","classes","children","click","className","onClick","Login","src","LogoWhite","alt","LogoBlue","window","open","fetch","then","data","text","response","location","Modal","show","close","id","NewTweet","getTweets","showModal","useState","newTweet","setNewTweet","placeholder","onChange","e","preventDefault","target","value","ok","catch","error","alert","console","finally","NavBar","setShowModal","event","isBackDropClicked","isCloseButtonClicked","to","TwitterLogoBlue","activeClassName","logout","TrendingTweet","tweet","search","count","tweet_volume","toFixed","name","replace","TrendingTweetsList","tweets","trends","map","uuidv4","TweetSearch","localTrendingTweets","setLocalTrendingTweets","searchedTweets","setSearchedTweets","searchTerm","setSearchTerm","isSearched","setIsSearched","handleTrendingTweetClick","json","statuses","log","useEffect","length","onSubmit","type","Home","homeTimelineTweets","setHomeTimelineTweets","setIsLoggedIn","getTimelineTweets","errors","message","Details","details","onEditButtonClick","profile_banner_url","profile_image_url","screen_name","description","created_at","friends_count","followers_count","Profile","profileDetails","setProfileDetails","setName","setDescription","profileImageUrl","setProfileImageUrl","image","setImage","userTimeline","setUserTimeline","getUserTimeline","method","imageJPG","files","newName","rows","cols","newDescription","ProtectedRoute","isLoggedIn","render","pathname","state","from","GetCredentials","login","useLocation","history","useHistory","params","URLSearchParams","oauthToken","get","oauthVerifier","Object","keys","push","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3bfe639.chunk.js","sourcesContent":["import \"./Button.css\"; \n\nexport default function Button(props) { \n  const {classes, children, click} = props; \n\n  return( \n    <button \n      className={`button ${classes}`}\n      onClick={click}>\n      {children}</button>\n  ); \n}","export default __webpack_public_path__ + \"static/media/TwitterLogoWhite.27cda7bd.png\";","export default __webpack_public_path__ + \"static/media/TwitterLogoBlue.f963dcac.png\";","import React from 'react'; \nimport \"./Login.css\"; \nimport Button from \"../Util/UI/Buttons/Button\";\nimport LogoWhite from \"../../images/TwitterLogoWhite.png\"; \nimport LogoBlue from \"../../images/TwitterLogoBlue.png\"; \n\nexport default function Login() { \n  function handleTwitterLoginClick() { \n    fetch(\"/api/sign-in-with-twitter\")\n    .then(data => {\n      return data.text()\n     })\n    .then(response => { \n      window.location = response; \n    }); \n  }\n\n  function handleSignUpButtonClick() { \n    window.open(\"https://mobile.twitter.com/i/flow/signup\");\n  }\n\n  return(<>\n    <img \n      src={LogoWhite}\n      alt=\"\"\n      className=\"twitter-logo-main\"/> \n    <div className=\"login-container\">\n      <div className=\"twitter-login-image-container\">\n        <img src={\"https://abs.twimg.com/sticky/illustrations/lohp_en_1302x955.png\"} \n        alt=\"\"\n        className=\"twitter-login-image\"\n        />\n      </div>\n      <div className=\"twitter-login-welcome\">\n          <div className=\"login\">\n            <img \n              src={LogoBlue} \n              alt=\"\"\n              className=\"twitter-logo-small\"/>\n            <h1 className=\"twitter-login-header\">Happening Now</h1>\n            <h4>Join Twitter Today.</h4>\n            <p className=\"sign-up-notice\">*You will be taken to the actual Twitter website to make your \n              account. You will then have to navigate back to this site \n              to sign in with Twitter.*</p>\n              <Button \n                classes={\"large dark\"}\n                click={handleSignUpButtonClick}>\n                Sign Up\n              </Button>\n              <Button\n                classes={\"large light\"}\n                click={handleTwitterLoginClick}>\n                Sign in with Twitter\n              </Button>\n          </div>\n      </div>\n    </div>\n  </>); \n}","import \"./Modal.css\"; \n\nexport default function Modal(props) { \n  \n  if (!props.show) { \n    return null; \n  }\n  \n  return(<>\n      <div onClick={props.close} id=\"modal-backdrop\" className=\"modal\">\n        <div className=\"modal-content\">\n        <button onClick={props.close} id=\"modal-close-button\">Close</button>\n              {props.children}\n        </div>\n      </div>\n      \n     \n  </>);\n}","import {useState} from 'react'; \nimport './NewTweet.css'; \n\nexport default function NewTweet(props) { \n  const {getTweets, showModal} = props; \n  const [newTweet, setNewTweet] = useState(''); \n\n\n  function handleNewTweet() { \n    fetch(`/api/status/update?status=${newTweet}`)\n    .then(response => {\n      if (response.ok) { \n        getTweets();  \n        setNewTweet(''); \n      }\n      \n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    .finally(() => showModal(false)); \n  }\n\n\n\n  function handleNewTweetChange(e) { \n    e.preventDefault(); \n    const newTweet = e.target.value;\n    setNewTweet(newTweet); \n  } \n\n\n  return (<>\n    <input placeholder=\"what's happening?\" onChange={handleNewTweetChange} value={newTweet}/>\n    <button onClick={handleNewTweet}>Tweet</button>\n  </>); \n}","import {useState} from \"react\"; \nimport {Link, NavLink} from \"react-router-dom\";\nimport Modal from \"../Util/UI/Modals/Modal\"; \nimport Button from \"../Util/UI/Buttons/Button\"; \nimport NewTweet from \"../Tweets/NewTweet/NewTweet\"; \nimport \"./NavBar.css\"; \nimport TwitterLogoBlue from \"../../images/TwitterLogoBlue.png\"; \n\n\nexport default function NavBar(props) { \n  const {getTweets} = props; \n  const [showModal, setShowModal] = useState(false); \n\n  function handleTweetButtonClick() { \n    setShowModal(true); \n  }\n\n  function handleCloseModalClick(event) { \n    const isBackDropClicked = event.target.id === \"modal-backdrop\"; \n    const isCloseButtonClicked = event.target.id === \"modal-close-button\"; \n\n    if (isBackDropClicked || isCloseButtonClicked) { \n      setShowModal(false); \n    }\n  }\n\n  return(<>\n    <Modal show={showModal} close={handleCloseModalClick}>\n      <NewTweet getTweets={getTweets} showModal={setShowModal}/>\n    </Modal>\n    <ul className=\"nav-bar-items\">\n      <li className=\"nav-bar-item logo-container\">\n        <Link to=\"/home\">\n        <img \n          src={TwitterLogoBlue}\n          className=\"logo\"/>\n        </Link>\n      </li>\n      <li className=\"nav-bar-item\">\n        <NavLink \n          to=\"/home\" \n          activeClassName=\"active\"\n          className=\"link\">\n          <span className=\"material-icons icon\">home</span>\n          <p className=\"text\">Home</p>\n        </NavLink>\n      </li>\n      <li className=\"nav-bar-item\">\n        <NavLink \n          to=\"/profile\" \n          activeClassName=\"active\"\n          className=\"link\">\n          <span className=\"material-icons icon\">perm_identity</span>\n          <p className=\"text\">Profile</p>\n        </NavLink>\n      </li>\n      <li>\n        <Button \n          classes=\"medium dark\"\n          click={handleTweetButtonClick}>\n          Tweet\n        </Button>\n      </li>\n      <li>\n        <Button\n          classes={\"medium light\"}\n          click={props.logout}>\n          Logout\n        </Button>\n      </li>\n    </ul>\n  </>); \n\n}","import \"./TrendingTweet.css\"; \n\nexport default function TrendingTweet(props) { \n  const {tweet, search } = props; \n\n  const count =  (tweet.tweet_volume / 1000).toFixed(1); \n\n  function onTweetClick() { \n    search(tweet.name.replace('#', '')); \n  }\n\n  return(<>\n    <li \n      className=\"trending-tweet\"\n      onClick={onTweetClick} >\n      <p className=\"trending-info\">Trending - USA</p>\n      <p className=\"trending-tweet-text\">{tweet.name}</p>\n      <p className=\"trending-info\">{count}k Tweets</p>\n    </li>\n  </>); \n\n\n}","import \"./TrendingTweetsList.css\"; \nimport { v4 as uuidv4 } from 'uuid';\nimport TrendingTweet from \"../TrendingTweetItem/TrendingTweet\"; \n\n\nexport default function TrendingTweetsList(props) { \n  const {tweets, search} = props; \n\n  const trends = tweets.map(tweet => (\n    <TrendingTweet \n      key={uuidv4()} \n      tweet={tweet}\n      search={search}/>\n  )); \n\n  return (\n    <ul className=\"trending-tweets-list\">\n      <li className=\"trending-top\"><h3>What's happening</h3></li>\n        {trends}\n      <li className=\"trending-bottom\"></li>\n    </ul>\n  ); \n}","import {useEffect, useState} from 'react'; \nimport TrendingTweetsList from \"../Tweets/TendingTweet/TrendingTweetsList/TrendingTweetsList\"; \nimport \"./TweetSearch.css\"; \n\nexport default function TweetSearch(props) { \n  const [localTrendingTweets, setLocalTrendingTweets] = useState([]); \n  const [searchedTweets, setSearchedTweets] = useState([]); \n  const [searchTerm, setSearchTerm] = useState(''); \n  const [isSearched, setIsSearched] = useState(false); \n\n\n  useEffect(() => { \n    fetch(`/api/trends`)\n    .then(data => data.json())\n    .then(response => { \n      if (response.length > 0) { \n        console.log(response); \n        setLocalTrendingTweets(response); \n      }\n    })\n    .catch(error => console.error(error))\n  }, [])\n\n\n  function handleSearchChange(e) { \n    e.preventDefault(); \n    const searchTerm = e.target.value; \n    setSearchTerm(searchTerm); \n  }\n\n  function handleSearchButtonClick(e) { \n    e.preventDefault(); \n    fetch(`/api/search?q=${searchTerm}`)\n    .then(data => data.json())\n    .then(response => { \n      setIsSearched(true); \n      setSearchedTweets(response.statuses);\n      setSearchTerm('');\n     })\n    .catch(error => console.log(error))\n  }\n\n\n\n\n\n  function handleTrendingTweetClick(searchTerm) { \n    fetch(`/api/search?q=${searchTerm}`)\n    .then(data => data.json())\n    .then(response => { \n      setIsSearched(true); \n      setSearchedTweets(response.statuses);\n      setSearchTerm('');\n     })\n    .catch(error => console.log(error))\n  }\n\n\n\n  function displayTweets() { \n    if (isSearched) { \n      return searchedTweets.map(tweet => (\n        <li key={tweet.id}>{tweet.text}</li>\n      ))\n    }\n    return ( \n      <TrendingTweetsList \n          tweets={localTrendingTweets}\n          search={handleTrendingTweetClick}/>\n    ); \n  }\n\n\n  return (<>\n      <form \n        className=\"search-input-form\"\n        onSubmit={handleSearchButtonClick}>\n        <span className=\"material-icons search-icon\">\n          search\n        </span>\n        <input \n          type=\"text\" \n          className=\"search-input\"\n          placeholder=\"Search Twitter\"\n          onChange={handleSearchChange} \n          value={searchTerm}/>\n      </form>\n      {displayTweets()}\n  </>)\n}","import {useState, useEffect} from \"react\"; \nimport NavBar from \"../NavBar/NavBar\"; \nimport TweetSearch from '../TweetSearch/TweetSearch'; \nimport NewTweet from \"../Tweets/NewTweet/NewTweet\"; \n\nexport default function Home(props) { \n  const [profileImageUrl, setProfileImageUrl] = useState(''); \n  const [homeTimelineTweets, setHomeTimelineTweets] = useState([]); \n  const {setIsLoggedIn} = props; \n  \n  // useEffect(() => { \n  //   fetch(`/api/profile-picture`)\n  //   .then(data => data.json())\n  //   .then(response => {\n  //     setProfileImageUrl(response); \n  //   })\n  //   .catch(error => console.error(error))\n  // }, [])\n\n  useEffect(() => { \n    getTimelineTweets(); \n  }, [])\n\n\n  function getTimelineTweets() { \n    fetch(`/api/home-timeline`)\n    .then(data => data.json())\n    .then(response => { \n      \n      if (response.errors) { \n        alert(response.errors[0].message);\n        console.error(response.errors[0].message); \n        return; \n      }\n\n      if (response) { \n        setHomeTimelineTweets(response); \n      }\n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n  }\n\n\n\n  return(<>\n    <NavBar \n      logout={() => setIsLoggedIn(false)}\n      getTimelineTweets={getTimelineTweets}\n    />\n    {/*TweetCard*/}\n    <h1>Home</h1>\n    {/* <img src={profileImageUrl} alt=\"profile-pic\"/>  */}\n    {/* <NewTweet getTweets={getTimelineTweets}/> */}\n\n    {/*Timeline */}\n    <ul>\n      {homeTimelineTweets.map(tweet => (\n        <li key={tweet.id}>{tweet.text}</li>\n      ))}\n    </ul>\n\n    <TweetSearch />\n  </>); \n}","\nexport default function Details({details, onEditButtonClick}) { \n\n  if (!details) { \n    return <p>Loading...</p>\n  }\n\n  return (<>\n    <h1>Profile</h1>\n    <img src={details.profile_banner_url} alt=\"profile-banner\"/>\n    <img src={details.profile_image_url} alt=\"profile-pic\"/> \n    <button onClick={onEditButtonClick}>Edit profile</button>\n    <p><strong>{details.name}</strong></p>\n    <p>{details.screen_name}</p>\n    <p>{details.description}</p>\n    <p>{details.created_at}</p>\n    <p>Following {details.friends_count}</p>\n    <p>Followers {details.followers_count}</p>\n    <ul>\n      {/*tweets*/}\n    </ul>\n  </>);\n}","import {useEffect, useState} from 'react'; \nimport Details from \"./Details/Details\";\nimport NavBar from \"../NavBar/NavBar\"; \nimport Modal from \"../Util/UI/Modals/Modal\";\nimport TweetSearch from \"../TweetSearch/TweetSearch\"; \n\n\n\nexport default function Profile(props) { \n  const { setIsLoggedIn } = props; \n  const [profileDetails, setProfileDetails] = useState(null); \n  const [showModal, setShowModal] = useState(false);  \n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [profileImageUrl, setProfileImageUrl] = useState(''); \n  const [image, setImage] = useState(null); \n  const [userTimeline, setUserTimeline] = useState([]); \n\n  useEffect(() => { \n    getProfileDetails(); \n  }, []);\n\n  useEffect(() => { \n    getUserTimeline(); \n  }, []); \n\n  function getProfileDetails() { \n    fetch('api/profile-details')\n    .then(data => data.json())\n    .then(response => { \n      setName(response.name);\n      setDescription(response.description);\n      setProfileImageUrl(response.profile_image_url);\n      setProfileDetails(response);\n      \n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    \n  }\n\n  \n\n  function getUserTimeline() { \n    fetch('api/user-timeline')\n    .then(data => data.json())\n    .then(response => {\n      setUserTimeline(response); \n    })\n    .catch(error => { \n      console.error(error); \n    }); \n  }\n\n\n\n  function handleEditProfileClick() { \n    setShowModal(true);\n  }\n\n  function handleCloseModalClick(event) { \n    const isBackDropClicked = event.target.id === \"modal-backdrop\"; \n    const isCloseButtonClicked = event.target.id === \"modal-close-button\"; \n\n    if (isBackDropClicked || isCloseButtonClicked) { \n      setShowModal(false); \n    }\n  }\n\n  function handleEditProfileSubmit(event){ \n    event.preventDefault();\n    fetch(`/api/profile-update?name=${name}&description=${description}`, { \n      method: \"POST\"\n    })\n    .then(data => {\n        return data.json()\n    })\n    .then(response => { \n      if (response) { \n        setName(response.name);\n        setDescription(response.description);\n        setProfileDetails(response);\n      }\n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    .finally(() => setShowModal(false));\n  }\n\n  function updateProfileImage() { \n    fetch(`/api/profile-image-update?image=${image}`, { \n      method: \"POST\"\n    })\n    .then(data => data.json())\n    .then(response => console.log(response))\n  }\n\n\n  function handleDescriptionChange(event) { \n    const newDescription = event.target.value; \n    setDescription(newDescription);\n  }\n\n  function handleNameChange(event) { \n    const newName = event.target.value; \n    setName(newName); \n  }\n\n  function onProfileImageChange(event) { \n    const imageJPG = event.target.files[0].name; \n    setImage(imageJPG); \n  }\n\n  useEffect(() => { \n    console.log(image); \n  }, [image])\n\n  return(<>\n    <Modal show={showModal} close={handleCloseModalClick}>\n      <h1>Edit Profile</h1> \n      <form onSubmit={handleEditProfileSubmit}>\n          <input type=\"file\" onChange={onProfileImageChange} />\n          <br />\n          <img src={profileImageUrl} alt=''/>\n          <br />\n          <input onChange={handleNameChange} value={name}/>\n          <br />\n          <textarea\n            rows=\"4\"\n            cols=\"50\"\n            onChange={handleDescriptionChange} value={description}>\n          </textarea>\n          <br />\n          <input type=\"submit\" value=\"Save\"/>\n      </form>\n    </Modal>\n    <NavBar logout={() => setIsLoggedIn(false)} getTweets={getUserTimeline}/>\n\n    <Details \n      details={profileDetails}\n      onEditButtonClick={handleEditProfileClick}\n    />\n    {userTimeline.map(tweet => (\n      <li key={tweet.id}>{tweet.text}</li>\n    ))}\n    <TweetSearch />\n  </>); \n}","import { \n  Route, \n  Redirect,\n} from \"react-router-dom\"; \n\nexport default function ProtectedRoute(props) { \n  const { children, isLoggedIn } = props; \n  return( \n    <Route\n      render={({location}) => \n        isLoggedIn ? ( \n          children\n        ) : ( \n          <Redirect \n           to={{\n             pathname: \"/\", \n             state: { from: location }\n           }}\n          />\n        )\n      }\n    />\n  );\n\n}","import { useEffect } from \"react\"; \nimport { useHistory }  from \"react-router-dom\"; \nimport { \n  useLocation\n} from \"react-router-dom\"; \n\nexport default function GetCredentials(props) { \n  const {login} = props; \n  const location = useLocation(); \n  const history = useHistory(); \n  const params = new URLSearchParams(location.search);\n  const oauthToken = params.get('oauth_token'); \n  const oauthVerifier = params.get('oauth_verifier');\n \n\n  useEffect(() => { \n    fetch(`/api/access-token?oauth_token=${oauthToken}&oauth_verifier=${oauthVerifier}`)\n    .then(data => data.json())\n    .then(response => {\n     \n      if (response && Object.keys(response).length === 0) { \n        //TODO: refactor this to use throw\n        alert('Something went wrong. Do not press the reload putting while on this page')\n        console.error(`Response object is empty. This means that the user reloaded the get-credentials page \n        or something went wrong with the signing process`); \n        console.log('response object', response); \n        history.push('/'); \n      }\n      //TODO: make this safer\n      //Just temporality storing use auth information in local storage until \n      //I can figure out a more secure way of doing it without a DB\n      // for (const param in response) { \n      //   localStorage.setItem(param, response[param]); \n      // }\n    \n    })\n    .then(() => { \n      login(true); \n      history.push('/home'); \n    })\n    .catch(error => console.log(`Network error: ${error}`)); \n    //TODO: figure out what to do with this\n    // eslint-disable-next-line\n  }, [oauthToken, oauthVerifier])\n  \n\n  return (<h1>Loading your profile...</h1>);\n\n\n}","import {useState} from 'react'; \nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route\n} from \"react-router-dom\"; \nimport Login from \"./Components/Login/Login\"; \nimport Home from \"./Components/Home/Home\"; \nimport Profile from \"./Components/Profile/Profile\"; \nimport ProtectedRoute from \"./Components/Util/Auth/ProtectedRoute\"; \nimport GetCredentials from \"./Components/Util/Auth/GetCredentials\"; \nimport './App.css';\n\nfunction App() {\n  //TODO: write logic for innital state\n  const initialState = () => Boolean(localStorage.getItem(\"screen_name\"));\n  const [isLoggedIn, setIsLoggedIn] = useState(true); \n\n\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login login={setIsLoggedIn}/>\n          </Route>\n          <Route exact path=\"/get-credentials\"> \n            <GetCredentials login={setIsLoggedIn}/>\n          </Route>\n          <ProtectedRoute exact path=\"/home\" isLoggedIn={isLoggedIn} >\n            <Home setIsLoggedIn={setIsLoggedIn} />\n          </ProtectedRoute>\n          <ProtectedRoute exact path=\"/profile\" isLoggedIn={isLoggedIn} >\n            <Profile setIsLoggedIn={setIsLoggedIn} />\n          </ProtectedRoute>\n        </Switch>\n    </Router>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}