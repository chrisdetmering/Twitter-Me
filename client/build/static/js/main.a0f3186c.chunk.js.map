{"version":3,"sources":["Components/Util/UI/Buttons/Button.js","images/TwitterLogoWhite.png","images/TwitterLogoBlue.png","Components/Login/Login.js","Components/Util/UI/Modals/Modal.js","Components/Tweets/NewTweet/NewTweet.js","Components/NavBar/NavBar.js","Components/Tweets/TendingTweet/TrendingTweetItem/TrendingTweet.js","Components/Util/UI/Spinners/LoadingSpinner.js","Components/Tweets/TendingTweet/TrendingTweetsList/TrendingTweetsList.js","Components/TweetSearch/TweetSearch.js","Components/Tweets/Tweets/Tweet/Tweet.js","Components/Tweets/Tweets/TweetList/TweetList.js","Components/Home/Home.js","Components/Profile/Details/Details.js","Components/Profile/Profile.js","Components/Util/Auth/ProtectedRoute.js","Components/Util/Auth/GetCredentials.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","classes","children","click","className","onClick","Login","src","LogoWhite","alt","LogoBlue","window","open","fetch","then","data","text","response","location","Modal","show","id","close","NewTweet","getTweets","showModal","useState","newTweet","setNewTweet","maxLength","placeholder","onChange","e","preventDefault","target","value","ok","catch","error","alert","console","finally","NavBar","setShowModal","event","isBackDropClicked","isCloseButtonClicked","to","TwitterLogoBlue","activeClassName","logout","TrendingTweet","tweet","search","count","tweet_volume","toFixed","name","replace","Spinner","TrendingTweetsList","tweets","loading","trends","map","uuidv4","TweetSearch","localTrendingTweets","setLocalTrendingTweets","searchTerm","setSearchTerm","isLoading","setIsLoading","setTweets","setLoading","useEffect","json","length","onSubmit","statuses","log","type","Tweet","profilePicUrl","setProfilePicUrl","user","created_at","retweet_count","favorite_count","screen_name","date","Date","hoursSince","Math","floor","now","getTime","getHoursSinceTweeted","TweetList","style","display","width","padding","Home","homeTimelineTweets","setHomeTimelineTweets","setIsLoggedIn","getTimelineTweets","errors","message","Details","details","onEditButtonClick","profile_banner_url","profile_image_url","description","toLocaleDateString","friends_count","followers_count","Profile","profileDetails","setProfileDetails","setName","setDescription","setProfileImageUrl","userTimeline","setUserTimeline","getUserTimeline","newName","rows","cols","newDescription","method","ProtectedRoute","isLoggedIn","render","pathname","state","from","GetCredentials","login","useLocation","history","useHistory","params","URLSearchParams","oauthToken","get","oauthVerifier","Object","keys","push","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f3186c.chunk.js","sourcesContent":["import \"./Button.css\"; \n\nexport default function Button(props) { \n  const {classes, children, click} = props; \n\n  return( \n    <button \n      className={`button ${classes}`}\n      onClick={click}>\n      {children}</button>\n  ); \n}","export default __webpack_public_path__ + \"static/media/TwitterLogoWhite.27cda7bd.png\";","export default __webpack_public_path__ + \"static/media/TwitterLogoBlue.f963dcac.png\";","import React from 'react'; \nimport \"./Login.css\"; \nimport Button from \"../Util/UI/Buttons/Button\";\nimport LogoWhite from \"../../images/TwitterLogoWhite.png\"; \nimport LogoBlue from \"../../images/TwitterLogoBlue.png\"; \n\nexport default function Login() { \n  function handleTwitterLoginClick() { \n    fetch(\"/api/sign-in-with-twitter\")\n    .then(data => {\n      return data.text()\n     })\n    .then(response => { \n      window.location = response; \n    }); \n  }\n\n  function handleSignUpButtonClick() { \n    window.open(\"https://mobile.twitter.com/i/flow/signup\");\n  }\n\n  return(<>\n    <img \n      src={LogoWhite}\n      alt=\"\"\n      className=\"twitter-logo-main\"/> \n    <div className=\"login-container\">\n      <div className=\"twitter-login-image-container\">\n        <img src={\"https://abs.twimg.com/sticky/illustrations/lohp_en_1302x955.png\"} \n        alt=\"\"\n        className=\"twitter-login-image\"\n        />\n      </div>\n      <div className=\"twitter-login-welcome\">\n          <div className=\"login\">\n            <img \n              src={LogoBlue} \n              alt=\"\"\n              className=\"twitter-logo-small\"/>\n            <h1 className=\"twitter-login-header\">Happening Now</h1>\n            <h4>Join Twitter Today.</h4>\n            <p className=\"sign-up-notice\">*You will be taken to the actual Twitter website to make your \n              account. You will then have to navigate back to this site \n              to sign in with Twitter.*</p>\n              <Button \n                classes={\"large dark\"}\n                click={handleSignUpButtonClick}>\n                Sign Up\n              </Button>\n              <Button\n                classes={\"large light\"}\n                click={handleTwitterLoginClick}>\n                Sign in with Twitter\n              </Button>\n          </div>\n      </div>\n    </div>\n  </>); \n}","import \"./Modal.css\"; \n\nexport default function Modal(props) { \n  const {classes} = props\n  if (!props.show) { \n    return null; \n  }\n  \n  return(<>\n    <div \n      className=\"modal\"\n      id=\"modal-backdrop\"\n      onClick={props.close}>\n      <div className={`modal-content`}>\n        <span \n          className=\"material-icons close-button\"\n          id=\"modal-close-button\"\n          onClick={props.close}>\n          clear\n        </span>\n        {props.children}\n      </div>\n    </div>\n  </>);\n}","import {useState} from 'react'; \nimport './NewTweet.css'; \nimport Button from \"../../Util/UI/Buttons/Button\"; \n\n\nexport default function NewTweet(props) { \n  const {getTweets, showModal} = props; \n  const [newTweet, setNewTweet] = useState(''); \n\n    // useEffect(() => { \n    //   fetch(`/api/profile-picture`)\n    //   .then(data => data.json())\n    //   .then(response => {\n    //     setProfileImageUrl(response); \n    //   })\n    //   .catch(error => console.error(error))\n    // }, [])\n\n  function handleNewTweet() { \n    fetch(`/api/status/update?status=${newTweet}`)\n    .then(response => {\n      if (response.ok) { \n        getTweets();  \n        setNewTweet(''); \n      }\n      \n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    .finally(() => { \n      if (showModal) { \n        showModal(false); \n      }\n    } ); \n  }\n\n\n\n  function handleNewTweetChange(e) { \n    e.preventDefault(); \n    const newTweet = e.target.value;\n    setNewTweet(newTweet); \n  } \n\n\n  return (<>\n    <div className=\"new-tweet-container\">\n      <textarea \n        className=\"new-tweet-input\"\n        maxLength=\"140\"\n        placeholder=\"what's happening?\" \n        onChange={handleNewTweetChange} \n        value={newTweet}/>\n      <div className=\"new-tweet-button-container\">\n        <div className=\"button-container\"> \n          <Button \n            classes=\"small light\"\n            click={handleNewTweet}>Tweet</Button>\n\n        </div>\n       \n      </div>      \n    </div>\n  </>); \n}","import {useState} from \"react\"; \nimport {Link, NavLink} from \"react-router-dom\";\nimport \"./NavBar.css\"; \nimport Modal from \"../Util/UI/Modals/Modal\"; \nimport Button from \"../Util/UI/Buttons/Button\"; \nimport NewTweet from \"../Tweets/NewTweet/NewTweet\"; \nimport TwitterLogoBlue from \"../../images/TwitterLogoBlue.png\"; \n\n\nexport default function NavBar(props) { \n  const {getTweets} = props; \n  const [showModal, setShowModal] = useState(false); \n\n  function handleTweetButtonClick() { \n    setShowModal(true); \n  }\n\n  function handleCloseModalClick(event) { \n    const isBackDropClicked = event.target.id === \"modal-backdrop\"; \n    const isCloseButtonClicked = event.target.id === \"modal-close-button\"; \n\n    if (isBackDropClicked || isCloseButtonClicked) { \n      setShowModal(false); \n    }\n  }\n\n  return(<>\n    <Modal \n      classes=\"medium\"\n      show={showModal} close={handleCloseModalClick}>\n      <NewTweet getTweets={getTweets} showModal={setShowModal}/>\n    </Modal>\n    <ul className=\"nav-bar-items\">\n      <li className=\"nav-bar-item logo-container\">\n        <Link to=\"/home\">\n        <img \n          src={TwitterLogoBlue}\n          className=\"logo\"/>\n        </Link>\n      </li>\n      <li className=\"nav-bar-item\">\n        <NavLink \n          to=\"/home\" \n          activeClassName=\"active\"\n          className=\"link\">\n          <span className=\"material-icons icon\">home</span>\n          <p className=\"text\">Home</p>\n        </NavLink>\n      </li>\n      <li className=\"nav-bar-item\">\n        <NavLink \n          to=\"/profile\" \n          activeClassName=\"active\"\n          className=\"link\">\n          <span className=\"material-icons icon\">perm_identity</span>\n          <p className=\"text\">Profile</p>\n        </NavLink>\n      </li>\n      <li>\n        <Button \n          classes=\"medium dark\"\n          click={handleTweetButtonClick}>\n          Tweet\n        </Button>\n      </li>\n      <li>\n        <Button\n          classes={\"medium light\"}\n          click={props.logout}>\n          Logout\n        </Button>\n      </li>\n    </ul>\n  </>); \n\n}","import \"./TrendingTweet.css\"; \n\nexport default function TrendingTweet(props) { \n  const {tweet, search } = props; \n\n  const count =  (tweet.tweet_volume / 1000).toFixed(1); \n\n  function onTweetClick() { \n    search(tweet.name.replace('#', '')); \n  }\n\n  return(<>\n    <li \n      className=\"trending-tweet\"\n      onClick={onTweetClick} >\n      <p className=\"trending-info\">Trending - USA</p>\n      <p className=\"trending-tweet-text\">{tweet.name}</p>\n      <p className=\"trending-info\">{count}k Tweets</p>\n    </li>\n  </>); \n\n\n}","import \"./LoadingSpinner.css\"; \n\nexport default function Spinner(props) { \n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\"></div>\n    </div>\n\n  );\n\n}","import \"./TrendingTweetsList.css\"; \nimport { v4 as uuidv4 } from 'uuid';\nimport TrendingTweet from \"../TrendingTweetItem/TrendingTweet\"; \nimport Spinner from \"../../../Util/UI/Spinners/LoadingSpinner\"; \n\nexport default function TrendingTweetsList(props) { \n  const {tweets, search, loading} = props; \n\n  const trends = tweets.map(tweet => (\n    <TrendingTweet \n      key={uuidv4()} \n      tweet={tweet}\n      search={search}/>\n  )); \n\n  return (\n    <ul className=\"trending-tweets-list\">\n      <li className=\"trending-top\"><h3>What's happening</h3></li>\n      {loading ? <Spinner /> : trends}\n      {!loading && <li className=\"trending-bottom\"></li>}\n    </ul>\n  ); \n}","import {useEffect, useState} from 'react'; \nimport \"./TweetSearch.css\"; \nimport TrendingTweetsList from \"../Tweets/TendingTweet/TrendingTweetsList/TrendingTweetsList\";  \n\nexport default function TweetSearch(props) { \n  const [localTrendingTweets, setLocalTrendingTweets] = useState([]); \n  const [searchTerm, setSearchTerm] = useState(''); \n  const [isLoading, setIsLoading] = useState(true); \n  const {setTweets, setLoading} = props; \n\n  useEffect(() => { \n    fetch(`/api/trends`)\n    .then(data => data.json())\n    .then(response => { \n      if (response.length > 0) {\n        setLocalTrendingTweets(response); \n        setIsLoading(false); \n      }\n    })\n    .catch(error => console.error(error))\n  }, [])\n\n\n  function handleSearchChange(e) { \n    e.preventDefault(); \n    const searchTerm = e.target.value; \n    setSearchTerm(searchTerm); \n  }\n\n  function handleSearchButtonClick(e) { \n    setLoading(true);\n    e.preventDefault(); \n    fetch(`/api/search?q=${searchTerm}`)\n    .then(data => data.json())\n    .then(response => { \n      setTweets(response.statuses);\n      setLoading(false);\n      setSearchTerm('');\n     })\n    .catch(error => console.log(error))\n  }\n\n\n  function handleTrendingTweetClick(searchTerm) { \n    setLoading(true);\n    fetch(`/api/search?q=${searchTerm}`)\n    .then(data => data.json())\n    .then(response => { \n      setTweets(response.statuses);\n      setLoading(false);\n      setSearchTerm('');\n     })\n    .catch(error => console.log(error))\n  }\n\n\n  return (<>\n    <div className=\"search-container\">\n      <div className=\"search-input-container\">\n        <form \n          className=\"search-input-form\"\n          onSubmit={handleSearchButtonClick}>\n          <span className=\"material-icons search-icon\">\n            search\n          </span>\n          <input \n            type=\"text\" \n            className=\"search-input\"\n            placeholder=\"Search Twitter\"\n            onChange={handleSearchChange} \n            value={searchTerm}/>\n        </form>\n      </div> \n      \n      <TrendingTweetsList \n        loading={isLoading}\n        tweets={localTrendingTweets}\n        search={handleTrendingTweetClick}/>\n      \n    </div>\n  </>)\n}","import {useEffect, useState} from 'react'; \nimport \"./Tweet.css\"; \n\nexport default function Tweet({ tweet }) { \n  const [profilePicUrl, setProfilePicUrl] = useState(''); \n  const {user} = tweet; \n  const {created_at, text, retweet_count, favorite_count} = tweet; \n\n  useEffect(() => { \n    fetch(`/api/users/profile-picture?screen_name=${user.screen_name}`)\n    .then(data => data.json())\n    .then(response => { \n\n      setProfilePicUrl(response);\n    })\n    .catch(error => console.error(error))\n\n  }, []); \n\n\n  function getHoursSinceTweeted() { \n    const date = new Date(created_at); \n    const hoursSince = Math.floor((Date.now() - date.getTime()) / 3600000); \n \n    if (hoursSince === 0) { \n      return Math.floor((Date.now() - date.getTime()) / 60000) + 'min'; \n    }\n    return hoursSince + 'h'; \n  }\n\n\n\n\n  return (  \n    <li className=\"tweet-container\">\n      <div className=\"user-profile-image\">\n        <img \n          src={profilePicUrl} \n          alt=\"\"\n          className=\"profile-image\"/>\n      </div>\n      <div className=\"tweet-content\">\n        <p className=\"user-name\">{user.name} \n          <span className=\"user-user_name\">@{user.screen_name} {getHoursSinceTweeted()}</span></p>\n        <p>{text}</p>\n\n        <div className=\"tweet-info\">\n          <p className=\"retweets-container\">\n            <span className=\"material-icons icon retweets\">\n              repeat\n            </span>\n            {retweet_count}\n          </p>\n          <p className=\"likes-container\">\n            <span className=\"material-icons icon likes\">\n              favorite_border\n            </span>\n            {favorite_count}\n          </p>\n        </div>\n      </div>\n    </li>\n  ); \n}","import Tweet from \"../Tweet/Tweet\"; \n\nexport default function TweetList({ tweets }) { \n  return (<>\n    <ul style={{display: \"inline-block\", width: \"600px\", padding: \"0\"}}>\n      {tweets.map(tweet => (\n        <Tweet \n        key={tweet.id}\n        tweet={tweet}\n      />\n      ))}\n    </ul>\n  </>); \n}","import {useState, useEffect} from \"react\"; \nimport \"./Home.css\"; \nimport NavBar from \"../NavBar/NavBar\"; \nimport TweetSearch from '../TweetSearch/TweetSearch'; \nimport NewTweet from \"../Tweets/NewTweet/NewTweet\"; \nimport TweetList from \"../Tweets/Tweets/TweetList/TweetList\"; \nimport Spinner from \"../Util/UI/Spinners/LoadingSpinner\"; \n\nexport default function Home(props) { \n  const [homeTimelineTweets, setHomeTimelineTweets] = useState([]); \n  const [isLoading, setIsLoading] = useState(true); \n  const {setIsLoggedIn} = props; \n\n\n  \n  useEffect(() => { \n    getTimelineTweets(); \n  }, [])\n\n\n  function getTimelineTweets() { \n    setIsLoading(true); \n    fetch(`/api/home-timeline`)\n    .then(data => data.json())\n    .then(response => { \n      \n      if (response.errors) { \n        alert(response.errors[0].message);\n        console.error(response.errors[0].message); \n        return; \n      }\n\n      if (response) { \n        // console.log(response); \n        setHomeTimelineTweets(response); \n      }\n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    .finally(() => { \n      setIsLoading(false); \n    })\n  }\n\n\n\n  return(<>\n    <div className=\"home-container\">\n      <div className=\"home-side-nav-container\">\n        <NavBar \n          logout={() => setIsLoggedIn(false)}\n          getTimelineTweets={getTimelineTweets}\n        />\n      </div>\n      \n      <div className=\"home-header-container\">\n        <h1 className=\"home-header\">Home</h1>\n        <NewTweet \n          getTweets={getTimelineTweets}/>\n         {isLoading \n          ? <Spinner /> \n          : <TweetList \n            tweets={homeTimelineTweets}/>}  \n      </div>  \n      <div className=\"home-search-container\">\n        <TweetSearch \n          setTweets={setHomeTimelineTweets}\n          setLoading={setIsLoading}/>\n      </div>\n    </div>\n  </>); \n}","import \"./Details.css\"; \nimport Button from \"../../Util/UI/Buttons/Button\"; \n\nexport default function Details({details, onEditButtonClick}) { \n\n  function getDate(date) { \n    return new Date(date).toLocaleDateString(); \n  }\n\n  if (!details) { \n    return <p>Loading...</p>\n  }\n\n\n  return (<>\n    <div className=\"details-container\">\n      <img className=\"banner\" src={details.profile_banner_url} alt=\"profile-banner\"/>\n      <img className=\"profile-picture\"src={details.profile_image_url} alt=\"profile-pic\"/>\n      <div className=\"edit-button-container\">\n        <Button\n          classes=\"small light\"\n          click={onEditButtonClick}>Edit profile</Button>\n      </div>\n      <div className=\"profile-info-container\">\n        <h3>{details.name}</h3>\n        <p className=\"screen-name\">@{details.screen_name}</p>\n        <p className=\"description\">{details.description}</p>\n        <p><span className=\"material-icons icon\">\n          date_range\n          </span> Joined {getDate(details.created_at)}\n        </p>\n        <div className=\"count-container\">\n          <p><span className=\"count\">{details.friends_count}</span><span className=\"text\">Following</span></p>\n          <p><span className=\"count\">{details.followers_count}</span><span className=\"text\">Followers</span></p>\n        </div>\n      </div>\n    </div>\n  </>);\n}","import {useEffect, useState} from 'react'; \nimport \"./Profile.css\"; \nimport Details from \"./Details/Details\";\nimport NavBar from \"../NavBar/NavBar\"; \nimport Modal from \"../Util/UI/Modals/Modal\";\nimport TweetSearch from \"../TweetSearch/TweetSearch\"; \nimport TweetList from \"../Tweets/Tweets/TweetList/TweetList\"; \nimport Button from \"../Util/UI/Buttons/Button\";\n\nexport default function Profile(props) { \n  const { setIsLoggedIn } = props; \n  const [profileDetails, setProfileDetails] = useState(null); \n  const [showModal, setShowModal] = useState(false);  \n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [profileImageUrl, setProfileImageUrl] = useState(''); \n  const [image, setImage] = useState(null); \n  const [userTimeline, setUserTimeline] = useState([]); \n\n  useEffect(() => { \n    getProfileDetails(); \n  }, []);\n\n  useEffect(() => { \n    getUserTimeline(); \n  }, []); \n\n  function getProfileDetails() { \n    fetch('api/profile-details')\n    .then(data => data.json())\n    .then(response => { \n      setName(response.name);\n      setDescription(response.description);\n      setProfileImageUrl(response.profile_image_url);\n      setProfileDetails(response);\n      \n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    \n  }\n\n  function getUserTimeline() { \n    fetch('api/user-timeline')\n    .then(data => data.json())\n    .then(response => {\n      setUserTimeline(response); \n    })\n    .catch(error => { \n      console.error(error); \n    }); \n  }\n\n  function handleEditProfileClick() { \n    setShowModal(true);\n  }\n\n  function handleCloseModalClick(event) { \n    const isBackDropClicked = event.target.id === \"modal-backdrop\"; \n    const isCloseButtonClicked = event.target.id === \"modal-close-button\"; \n\n    if (isBackDropClicked || isCloseButtonClicked) { \n      setShowModal(false); \n    }\n  }\n\n  function handleEditProfileSubmit(event){ \n    event.preventDefault();\n    fetch(`/api/profile-update?name=${name}&description=${description}`, { \n      method: \"POST\"\n    })\n    .then(data => {\n        return data.json()\n    })\n    .then(response => { \n      if (response) { \n        setName(response.name);\n        setDescription(response.description);\n        setProfileDetails(response);\n      }\n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    .finally(() => setShowModal(false));\n  }\n\n  // function updateProfileImage() { \n  //   fetch(`/api/profile-image-update?image=${image}`, { \n  //     method: \"POST\"\n  //   })\n  //   .then(data => data.json())\n  //   .then(response => console.log(response))\n  // }\n\n\n  function handleDescriptionChange(event) { \n    const newDescription = event.target.value; \n    setDescription(newDescription);\n  }\n\n  function handleNameChange(event) { \n    const newName = event.target.value; \n    setName(newName); \n  }\n\n  // function onProfileImageChange(event) { \n  //   const imageJPG = event.target.files[0].name; \n  //   setImage(imageJPG); \n  // }\n\n  // useEffect(() => { \n  //   console.log(image); \n  // }, [image])\n\n  return(<>\n    <Modal show={showModal} close={handleCloseModalClick}>\n      <h1>Edit Profile</h1> \n          <br />\n          <textarea \n            className=\"edit-name-textarea\"\n            maxLength=\"50\"\n            onChange={handleNameChange} \n            value={name}>\n          </textarea>\n          <br />\n          <textarea\n            className=\"edit-description-textarea\"\n            rows=\"4\"\n            cols=\"50\"\n            maxLength=\"160\"\n            onChange={handleDescriptionChange} value={description}>\n          </textarea>\n          <br />\n          <Button \n            classes=\"small dark\"\n            click={handleEditProfileSubmit}>Save</Button>\n    \n    </Modal>\n    <div className=\"profile-container\">\n      <div className=\"profile-side-nav-container\">\n        <NavBar logout={() => setIsLoggedIn(false)} getTweets={getUserTimeline}/>\n      </div>\n      <div className=\"profile-details-container\">\n        <Details \n          details={profileDetails}\n          onEditButtonClick={handleEditProfileClick}\n        />\n        <TweetList tweets={userTimeline}/>\n      </div>\n      <div className=\"profile-search-container\">\n        <TweetSearch />\n        \n      </div>\n    </div>\n  </>); \n}","import { \n  Route, \n  Redirect,\n} from \"react-router-dom\"; \n\nexport default function ProtectedRoute(props) { \n  const { children, isLoggedIn } = props; \n  return( \n    <Route\n      render={({location}) => \n        isLoggedIn ? ( \n          children\n        ) : ( \n          <Redirect \n           to={{\n             pathname: \"/\", \n             state: { from: location }\n           }}\n          />\n        )\n      }\n    />\n  );\n\n}","import { useEffect } from \"react\"; \nimport { useHistory }  from \"react-router-dom\"; \nimport { \n  useLocation\n} from \"react-router-dom\"; \n\nexport default function GetCredentials(props) { \n  const {login} = props; \n  const location = useLocation(); \n  const history = useHistory(); \n  const params = new URLSearchParams(location.search);\n  const oauthToken = params.get('oauth_token'); \n  const oauthVerifier = params.get('oauth_verifier');\n \n\n  useEffect(() => { \n    fetch(`/api/access-token?oauth_token=${oauthToken}&oauth_verifier=${oauthVerifier}`)\n    .then(data => data.json())\n    .then(response => {\n     \n      if (response && Object.keys(response).length === 0) { \n        //TODO: refactor this to use throw\n        alert('Something went wrong. Do not press the reload putting while on this page')\n        console.error(`Response object is empty. This means that the user reloaded the get-credentials page \n        or something went wrong with the signing process`); \n        console.log('response object', response); \n        history.push('/'); \n      }\n      //TODO: make this safer\n      //Just temporality storing use auth information in local storage until \n      //I can figure out a more secure way of doing it without a DB\n      // for (const param in response) { \n      //   localStorage.setItem(param, response[param]); \n      // }\n    \n    })\n    .then(() => { \n      login(true); \n      history.push('/home'); \n    })\n    .catch(error => console.log(`Network error: ${error}`)); \n    //TODO: figure out what to do with this\n    // eslint-disable-next-line\n  }, [oauthToken, oauthVerifier])\n  \n\n  return (<h1>Loading your profile...</h1>);\n\n\n}","import {useState} from 'react'; \nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route\n} from \"react-router-dom\"; \nimport Login from \"./Components/Login/Login\"; \nimport Home from \"./Components/Home/Home\"; \nimport Profile from \"./Components/Profile/Profile\"; \nimport ProtectedRoute from \"./Components/Util/Auth/ProtectedRoute\"; \nimport GetCredentials from \"./Components/Util/Auth/GetCredentials\"; \nimport './App.css';\n\nfunction App() {\n  //TODO: write logic for innital state\n  const initialState = () => Boolean(localStorage.getItem(\"screen_name\"));\n  const [isLoggedIn, setIsLoggedIn] = useState(true); \n\n\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login login={setIsLoggedIn}/>\n          </Route>\n          <Route exact path=\"/get-credentials\"> \n            <GetCredentials login={setIsLoggedIn}/>\n          </Route>\n          <ProtectedRoute exact path=\"/home\" isLoggedIn={isLoggedIn} >\n            <Home setIsLoggedIn={setIsLoggedIn} />\n          </ProtectedRoute>\n          <ProtectedRoute exact path=\"/profile\" isLoggedIn={isLoggedIn} >\n            <Profile setIsLoggedIn={setIsLoggedIn} />\n          </ProtectedRoute>\n        </Switch>\n    </Router>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}