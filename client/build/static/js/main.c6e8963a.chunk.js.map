{"version":3,"sources":["Components/Login/TwitterLogoWhite.png","Components/Login/TwitterLogoBlue.png","Components/Login/Login.js","Components/Util/UI/Modals/Modal.js","Components/Tweets/NewTweet/NewTweet.js","Components/NavBar/NavBar.js","Components/TweetSearch/TweetSearch.js","Components/Home/Home.js","Components/Profile/Details/Details.js","Components/Profile/Profile.js","Components/Util/Auth/ProtectedRoute.js","Components/Util/Auth/GetCredentials.js","App.js","reportWebVitals.js","index.js"],"names":["Login","src","LogoWhite","className","LogoBlue","onClick","window","open","fetch","then","data","text","response","location","Modal","props","show","close","id","children","NewTweet","getTweets","showModal","console","log","useState","newTweet","setNewTweet","placeholder","onChange","e","preventDefault","target","value","ok","catch","error","alert","finally","NavBar","setShowModal","event","isBackDropClicked","isCloseButtonClicked","to","activeClassName","logout","TweetSearch","localTrendingTweets","setLocalTrendingTweets","searchedTweets","setSearchedTweets","searchTerm","setSearchTerm","isSearched","setIsSearched","useEffect","json","length","trends","type","statuses","map","tweet","trend","idx","name","Home","homeTimelineTweets","setHomeTimelineTweets","setIsLoggedIn","getTimelineTweets","errors","message","Details","details","onEditButtonClick","profile_banner_url","alt","profile_image_url","screen_name","description","created_at","friends_count","followers_count","Profile","profileDetails","setProfileDetails","setName","setDescription","profileImageUrl","setProfileImageUrl","image","setImage","userTimeline","setUserTimeline","getUserTimeline","onSubmit","method","imageJPG","files","newName","rows","cols","newDescription","ProtectedRoute","isLoggedIn","render","pathname","state","from","GetCredentials","login","useLocation","history","useHistory","params","URLSearchParams","search","oauthToken","get","oauthVerifier","Object","keys","push","App","Boolean","localStorage","getItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6e8963a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/TwitterLogoWhite.27cda7bd.png\";","export default __webpack_public_path__ + \"static/media/TwitterLogoBlue.f963dcac.png\";","import React from 'react'; \nimport \"./Login.css\"; \nimport LogoWhite from \"./TwitterLogoWhite.png\"; \nimport LogoBlue from \"./TwitterLogoBlue.png\"; \n\nexport default function Login() { \n  function handleTwitterLoginClick() { \n    fetch(\"/api/sign-in-with-twitter\")\n    .then(data => {\n      return data.text()\n     })\n    .then(response => { \n      window.location = response; \n    }); \n  }\n\n  function handleSignUpButtonClick() { \n    window.open(\"https://mobile.twitter.com/i/flow/signup\");\n  }\n\n  return(<>\n    <img src={LogoWhite} className=\"twitter-logo-main\"/> \n    <div className=\"login-container\">\n      <div className=\"twitter-login-image-container\">\n        <img src={\"https://abs.twimg.com/sticky/illustrations/lohp_en_1302x955.png\"} \n        className=\"twitter-login-image\"/>\n      </div>\n      <div className=\"twitter-login-welcome\">\n          <div className=\"login\">\n            <img src={LogoBlue} className=\"twitter-logo-small\"/>\n            <h1 className=\"twitter-login-header\">Happening Now</h1>\n            <h4>Join Twitter Today.</h4>\n            <p className=\"sign-up-notice\">*You will be taken to the actual Twitter website to make your \n              account. You will then have to navigate back to this site \n              to sign in with Twitter.*</p>\n            <button className=\"sign-up-button\" onClick={handleSignUpButtonClick}>Sign Up</button>\n            <button className=\"login-button\" onClick={handleTwitterLoginClick}>Sign in with Twitter</button>\n          </div>\n      </div>\n    </div>\n  </>); \n}","import \"./Modal.css\"; \n\nexport default function Modal(props) { \n  \n  if (!props.show) { \n    return null; \n  }\n  \n  return(<>\n      <div onClick={props.close} id=\"modal-backdrop\" className=\"modal\">\n        <div className=\"modal-content\">\n        <button onClick={props.close} id=\"modal-close-button\">Close</button>\n              {props.children}\n        </div>\n      </div>\n      \n     \n  </>);\n}","import {useState} from 'react'; \nimport './NewTweet.css'; \n\nexport default function NewTweet(props) { \n  const {getTweets, showModal} = props; \n  console.log(showModal)\n  const [newTweet, setNewTweet] = useState(''); \n\n\n  function handleNewTweet() { \n    fetch(`/api/status/update?status=${newTweet}`)\n    .then(response => {\n      if (response.ok) { \n        getTweets();  \n        setNewTweet(''); \n      }\n      \n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    .finally(() => showModal(false)); \n  }\n\n\n\n  function handleNewTweetChange(e) { \n    e.preventDefault(); \n    const newTweet = e.target.value;\n    setNewTweet(newTweet); \n  } \n\n\n  return (<>\n    <input placeholder=\"what's happening?\" onChange={handleNewTweetChange} value={newTweet}/>\n    <button onClick={handleNewTweet}>Tweet</button>\n  </>); \n}","import {useState} from \"react\"; \nimport { NavLink} from \"react-router-dom\";\nimport Modal from \"../Util/UI/Modals/Modal\"; \nimport NewTweet from \"../Tweets/NewTweet/NewTweet\"; \nimport \"./NavBar.css\"; \n\n\nexport default function NavBar(props) { \n  const {getTweets} = props; \n  const [showModal, setShowModal] = useState(false); \n\n  function handleTweetButtonClick() { \n    setShowModal(true); \n  }\n\n  function handleCloseModalClick(event) { \n    const isBackDropClicked = event.target.id === \"modal-backdrop\"; \n    const isCloseButtonClicked = event.target.id === \"modal-close-button\"; \n\n    if (isBackDropClicked || isCloseButtonClicked) { \n      setShowModal(false); \n    }\n  }\n\n  return(<>\n    <Modal show={showModal} close={handleCloseModalClick}>\n      <NewTweet getTweets={getTweets} showModal={setShowModal}/>\n    </Modal>\n    <ul>\n      <li>\n        <NavLink to=\"/home\" activeClassName=\"active\">home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/profile\" activeClassName=\"active\">profile</NavLink>\n      </li>\n      <li>\n        <button onClick={handleTweetButtonClick}>Tweet</button>\n      </li>\n      <li>\n        <button onClick={props.logout}>Logout</button>\n      </li>\n    </ul>\n  </>); \n\n}","import {useEffect, useState} from 'react'; \n\nexport default function TweetSearch(props) { \n  const [localTrendingTweets, setLocalTrendingTweets] = useState([]); \n  const [searchedTweets, setSearchedTweets] = useState([]); \n  const [searchTerm, setSearchTerm] = useState(''); \n  const [isSearched, setIsSearched] = useState(false); \n\n\n  useEffect(() => { \n    fetch(`/api/trends`)\n    .then(data => data.json())\n    .then(response => { \n      if (response.length > 0) { \n        setLocalTrendingTweets(response[0].trends); \n      }\n    })\n    .catch(error => console.error(error))\n  }, [])\n\n\n  function handleSearchChange(e) { \n    e.preventDefault(); \n    const searchTerm = e.target.value; \n    setSearchTerm(searchTerm); \n  }\n\n  function handleSearchButtonClick() { \n    fetch(`/api/search?q=${searchTerm}`)\n    .then(data => data.json())\n    .then(response => { \n      setIsSearched(true); \n      setSearchedTweets(response.statuses);\n      setSearchTerm('');\n     })\n    .catch(error => console.log(error))\n  }\n\n\n\n//TODO: need to think of a better way of doing this\n  function displayTweets() { \n    if (isSearched) { \n      return searchedTweets.map(tweet => (\n        <li key={tweet.id}>{tweet.text}</li>\n      ))\n    }\n\n    return localTrendingTweets.map((trend, idx) => (\n      <li key={idx}>{trend.name}</li>\n    ))\n  }\n\n\n  return (<>\n    <br/>\n    <input \n      type=\"text\" \n      placeholder=\"search twitter...\"\n      onChange={handleSearchChange} \n      value={searchTerm}/>\n    <button onClick={handleSearchButtonClick}>Search</button>\n    <ul>\n      {displayTweets()}\n    </ul>\n  </>)\n}","import {useState, useEffect} from \"react\"; \nimport NavBar from \"../NavBar/NavBar\"; \nimport TweetSearch from '../TweetSearch/TweetSearch'; \nimport NewTweet from \"../Tweets/NewTweet/NewTweet\"; \n\nexport default function Home(props) { \n  const [profileImageUrl, setProfileImageUrl] = useState(''); \n  const [homeTimelineTweets, setHomeTimelineTweets] = useState([]); \n  const {setIsLoggedIn} = props; \n  \n  // useEffect(() => { \n  //   fetch(`/api/profile-picture`)\n  //   .then(data => data.json())\n  //   .then(response => {\n  //     setProfileImageUrl(response); \n  //   })\n  //   .catch(error => console.error(error))\n  // }, [])\n\n  useEffect(() => { \n    getTimelineTweets(); \n  }, [])\n\n\n  function getTimelineTweets() { \n    fetch(`/api/home-timeline`)\n    .then(data => data.json())\n    .then(response => { \n      \n      if (response.errors) { \n        alert(response.errors[0].message);\n        console.error(response.errors[0].message); \n        return; \n      }\n\n      if (response) { \n        setHomeTimelineTweets(response); \n      }\n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n  }\n\n\n\n  return(<>\n    <NavBar \n      logout={() => setIsLoggedIn(false)}\n      getTimelineTweets={getTimelineTweets}\n    />\n    {/*TweetCard*/}\n    <h1>Home</h1>\n    {/* <img src={profileImageUrl} alt=\"profile-pic\"/>  */}\n    {/* <NewTweet getTweets={getTimelineTweets}/> */}\n\n    {/*Timeline */}\n    <ul>\n      {homeTimelineTweets.map(tweet => (\n        <li key={tweet.id}>{tweet.text}</li>\n      ))}\n    </ul>\n\n    <TweetSearch />\n  </>); \n}","\nexport default function Details({details, onEditButtonClick}) { \n\n  if (!details) { \n    return <p>Loading...</p>\n  }\n\n  return (<>\n    <h1>Profile</h1>\n    <img src={details.profile_banner_url} alt=\"profile-banner\"/>\n    <img src={details.profile_image_url} alt=\"profile-pic\"/> \n    <button onClick={onEditButtonClick}>Edit profile</button>\n    <p><strong>{details.name}</strong></p>\n    <p>{details.screen_name}</p>\n    <p>{details.description}</p>\n    <p>{details.created_at}</p>\n    <p>Following {details.friends_count}</p>\n    <p>Followers {details.followers_count}</p>\n    <ul>\n      {/*tweets*/}\n    </ul>\n  </>);\n}","import {useEffect, useState} from 'react'; \nimport Details from \"./Details/Details\";\nimport NavBar from \"../NavBar/NavBar\"; \nimport Modal from \"../Util/UI/Modals/Modal\";\nimport TweetSearch from \"../TweetSearch/TweetSearch\"; \n\n\n\nexport default function Profile(props) { \n  const { setIsLoggedIn } = props; \n  const [profileDetails, setProfileDetails] = useState(null); \n  const [showModal, setShowModal] = useState(false);  \n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [profileImageUrl, setProfileImageUrl] = useState(''); \n  const [image, setImage] = useState(null); \n  const [userTimeline, setUserTimeline] = useState([]); \n\n  useEffect(() => { \n    getProfileDetails(); \n  }, []);\n\n  useEffect(() => { \n    getUserTimeline(); \n  }, []); \n\n  function getProfileDetails() { \n    fetch('api/profile-details')\n    .then(data => data.json())\n    .then(response => { \n      setName(response.name);\n      setDescription(response.description);\n      setProfileImageUrl(response.profile_image_url);\n      setProfileDetails(response);\n      \n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    \n  }\n\n  \n\n  function getUserTimeline() { \n    fetch('api/user-timeline')\n    .then(data => data.json())\n    .then(response => {\n      setUserTimeline(response); \n    })\n    .catch(error => { \n      console.error(error); \n    }); \n  }\n\n\n\n  function handleEditProfileClick() { \n    setShowModal(true);\n  }\n\n  function handleCloseModalClick(event) { \n    const isBackDropClicked = event.target.id === \"modal-backdrop\"; \n    const isCloseButtonClicked = event.target.id === \"modal-close-button\"; \n\n    if (isBackDropClicked || isCloseButtonClicked) { \n      setShowModal(false); \n    }\n  }\n\n  function handleEditProfileSubmit(event){ \n    event.preventDefault();\n    fetch(`/api/profile-update?name=${name}&description=${description}`, { \n      method: \"POST\"\n    })\n    .then(data => {\n        return data.json()\n    })\n    .then(response => { \n      if (response) { \n        setName(response.name);\n        setDescription(response.description);\n        setProfileDetails(response);\n      }\n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    .finally(() => setShowModal(false));\n  }\n\n  function updateProfileImage() { \n    fetch(`/api/profile-image-update?image=${image}`, { \n      method: \"POST\"\n    })\n    .then(data => data.json())\n    .then(response => console.log(response))\n  }\n\n\n  function handleDescriptionChange(event) { \n    const newDescription = event.target.value; \n    setDescription(newDescription);\n  }\n\n  function handleNameChange(event) { \n    const newName = event.target.value; \n    setName(newName); \n  }\n\n  function onProfileImageChange(event) { \n    const imageJPG = event.target.files[0].name; \n    setImage(imageJPG); \n  }\n\n  useEffect(() => { \n    console.log(image); \n  }, [image])\n\n  return(<>\n    <Modal show={showModal} close={handleCloseModalClick}>\n      <h1>Edit Profile</h1> \n      <form onSubmit={handleEditProfileSubmit}>\n          <input type=\"file\" onChange={onProfileImageChange} />\n          <br />\n          <img src={profileImageUrl} alt=''/>\n          <br />\n          <input onChange={handleNameChange} value={name}/>\n          <br />\n          <textarea\n            rows=\"4\"\n            cols=\"50\"\n            onChange={handleDescriptionChange} value={description}>\n          </textarea>\n          <br />\n          <input type=\"submit\" value=\"Save\"/>\n      </form>\n    </Modal>\n    <NavBar logout={() => setIsLoggedIn(false)} getTweets={getUserTimeline}/>\n\n    <Details \n      details={profileDetails}\n      onEditButtonClick={handleEditProfileClick}\n    />\n    {userTimeline.map(tweet => (\n      <li key={tweet.id}>{tweet.text}</li>\n    ))}\n    <TweetSearch />\n  </>); \n}","import { \n  Route, \n  Redirect,\n} from \"react-router-dom\"; \n\nexport default function ProtectedRoute(props) { \n  const { children, isLoggedIn } = props; \n  return( \n    <Route\n      render={({location}) => \n        isLoggedIn ? ( \n          children\n        ) : ( \n          <Redirect \n           to={{\n             pathname: \"/\", \n             state: { from: location }\n           }}\n          />\n        )\n      }\n    />\n  );\n\n}","import { useEffect } from \"react\"; \nimport { useHistory }  from \"react-router-dom\"; \nimport { \n  useLocation\n} from \"react-router-dom\"; \n\nexport default function GetCredentials(props) { \n  const {login} = props; \n  const location = useLocation(); \n  const history = useHistory(); \n  const params = new URLSearchParams(location.search);\n  const oauthToken = params.get('oauth_token'); \n  const oauthVerifier = params.get('oauth_verifier');\n \n\n  useEffect(() => { \n    fetch(`/api/access-token?oauth_token=${oauthToken}&oauth_verifier=${oauthVerifier}`)\n    .then(data => data.json())\n    .then(response => {\n     \n      if (response && Object.keys(response).length === 0) { \n        //TODO: refactor this to use throw\n        alert('Something went wrong. Do not press the reload putting while on this page')\n        console.error(`Response object is empty. This means that the user reloaded the get-credentials page \n        or something went wrong with the signing process`); \n        console.log('response object', response); \n        history.push('/'); \n      }\n      //TODO: make this safer\n      //Just temporality storing use auth information in local storage until \n      //I can figure out a more secure way of doing it without a DB\n      // for (const param in response) { \n      //   localStorage.setItem(param, response[param]); \n      // }\n    \n    })\n    .then(() => { \n      login(true); \n      history.push('/home'); \n    })\n    .catch(error => console.log(`Network error: ${error}`)); \n    //TODO: figure out what to do with this\n    // eslint-disable-next-line\n  }, [oauthToken, oauthVerifier])\n  \n\n  return (<h1>Loading your profile...</h1>);\n\n\n}","import {useState} from 'react'; \nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route\n} from \"react-router-dom\"; \nimport Login from \"./Components/Login/Login\"; \nimport Home from \"./Components/Home/Home\"; \nimport Profile from \"./Components/Profile/Profile\"; \nimport ProtectedRoute from \"./Components/Util/Auth/ProtectedRoute\"; \nimport GetCredentials from \"./Components/Util/Auth/GetCredentials\"; \nimport './App.css';\n\nfunction App() {\n  const initialState = () => Boolean(localStorage.getItem(\"screen_name\"));\n  const [isLoggedIn, setIsLoggedIn] = useState(initialState); \n\n\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login login={setIsLoggedIn}/>\n          </Route>\n          <Route exact path=\"/get-credentials\"> \n            <GetCredentials login={setIsLoggedIn}/>\n          </Route>\n          <ProtectedRoute exact path=\"/home\" isLoggedIn={isLoggedIn} >\n            <Home setIsLoggedIn={setIsLoggedIn} />\n          </ProtectedRoute>\n          <ProtectedRoute exact path=\"/profile\" isLoggedIn={isLoggedIn} >\n            <Profile setIsLoggedIn={setIsLoggedIn} />\n          </ProtectedRoute>\n        </Switch>\n    </Router>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}