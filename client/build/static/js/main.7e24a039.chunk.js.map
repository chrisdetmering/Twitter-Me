{"version":3,"sources":["Components/Login/Login.js","Components/Util/UI/Modals/Modal.js","Components/Tweets/NewTweet/NewTweet.js","Components/NavBar/NavBar.js","Components/TweetSearch/TweetSearch.js","Components/Home/Home.js","Components/Profile/Details/Details.js","Components/Profile/Profile.js","Components/Util/Auth/ProtectedRoute.js","Components/Util/Auth/GetCredentials.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","login","history","useHistory","onClick","push","fetch","then","data","text","response","window","location","Modal","show","close","id","className","children","NewTweet","useState","newTweet","setNewTweet","placeholder","onChange","e","preventDefault","target","value","ok","getTweets","catch","error","alert","console","NavBar","showModal","setShowModal","event","isBackDropClicked","isCloseButtonClicked","to","activeClassName","logout","TweetSearch","localTrendingTweets","setLocalTrendingTweets","searchedTweets","setSearchedTweets","searchTerm","setSearchTerm","isSearched","setIsSearched","useEffect","json","length","trends","type","statuses","log","map","tweet","trend","idx","name","Home","homeTimelineTweets","setHomeTimelineTweets","setIsLoggedIn","getTimelineTweets","errors","message","Details","details","onEditButtonClick","src","profile_banner_url","alt","profile_image_url","screen_name","description","created_at","friends_count","followers_count","Profile","profileDetails","setProfileDetails","setName","setDescription","profileImageUrl","setProfileImageUrl","onSubmit","method","finally","newName","rows","cols","newDescription","ProtectedRoute","isLoggedIn","render","pathname","state","from","GetCredentials","useLocation","params","URLSearchParams","search","oauthToken","get","oauthVerifier","Object","keys","App","Boolean","localStorage","getItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e24a039.chunk.js","sourcesContent":["import { useHistory } from \"react-router-dom\"; \nimport React from 'react'; \nexport default function Login(props) { \n  const {login} = props; \n  let history = useHistory(); \n\n  function handleLoginClick() { \n    login(true) \n    history.push(\"/home\")\n  }\n\n  function handleTwitterLoginClick() { \n    fetch(\"/api/sign-in-with-twitter\")\n    .then(data => {\n      return data.text()\n     })\n    .then(response => { \n      window.location = response; \n    }); \n  }\n\n\n  return(<>\n    <button onClick={handleLoginClick}>Login</button>\n    <button onClick={handleTwitterLoginClick}>Sign in with Twitter</button>\n  </>); \n}","import \"./Modal.css\"; \n\nexport default function Modal(props) { \n  \n  if (!props.show) { \n    return null; \n  }\n  \n  return(<>\n      <div onClick={props.close} id=\"ModalBackDrop\" className=\"Modal\">\n        <div className=\"ModalContent\">\n        <button onClick={props.close} id=\"ModalCloseButton\">Close</button>\n              {props.children}\n        </div>\n      </div>\n      \n     \n  </>);\n}","import {useState} from 'react'; \nimport './NewTweet.css'; \n\nexport default function NewTweet(props) { \n  const [newTweet, setNewTweet] = useState(''); \n\n\n  function handleNewTweet() { \n    fetch(`/api/status/update?status=${newTweet}`)\n    .then(response => {\n      if (response.ok) { \n        props.getTweets();  \n        setNewTweet(''); \n      }\n      \n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n  }\n\n\n\n  function handleNewTweetChange(e) { \n    e.preventDefault(); \n    const newTweet = e.target.value;\n    setNewTweet(newTweet); \n  } \n\n\n  return (<>\n    <input placeholder=\"what's happening?\" onChange={handleNewTweetChange} value={newTweet}/>\n    <button onClick={handleNewTweet}>Tweet</button>\n  </>); \n}","import {useState} from \"react\"; \nimport { NavLink} from \"react-router-dom\";\nimport Modal from \"../Util/UI/Modals/Modal\"; \nimport NewTweet from \"../Tweets/NewTweet/NewTweet\"; \nimport \"./NavBar.css\"; \n\n\nexport default function NavBar(props) { \n  const [showModal, setShowModal] = useState(false); \n\n  function handleTweetButtonClick() { \n    setShowModal(true); \n  }\n\n  function handleCloseModalClick(event) { \n    const isBackDropClicked = event.target.id === \"ModalBackDrop\"; \n    const isCloseButtonClicked = event.target.id === \"ModalCloseButton\"; \n\n    if (isBackDropClicked || isCloseButtonClicked) { \n      setShowModal(false); \n    }\n  }\n\n\n  //TODO: need to set new timeline \n  //TODO: need to close modal on new tweet click\n  return(<>\n    <Modal show={showModal} close={handleCloseModalClick}>\n      <NewTweet />\n    </Modal>\n    <ul>\n      <li>\n        <NavLink to=\"/home\" activeClassName=\"active\">home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/profile\" activeClassName=\"active\">profile</NavLink>\n      </li>\n      <li>\n        <button onClick={handleTweetButtonClick}>Tweet</button>\n      </li>\n      <li>\n        <button onClick={props.logout}>Logout</button>\n      </li>\n    </ul>\n  </>); \n\n}","import {useEffect, useState} from 'react'; \n\nexport default function TweetSearch(props) { \n  const [localTrendingTweets, setLocalTrendingTweets] = useState([]); \n  const [searchedTweets, setSearchedTweets] = useState([]); \n  const [searchTerm, setSearchTerm] = useState(''); \n  const [isSearched, setIsSearched] = useState(false); \n\n\n  useEffect(() => { \n    fetch(`/api/trends`)\n    .then(data => data.json())\n    .then(response => { \n      if (response.length > 0) { \n        setLocalTrendingTweets(response[0].trends); \n      }\n    })\n    .catch(error => console.error(error))\n  }, [])\n\n\n  function handleSearchChange(e) { \n    e.preventDefault(); \n    const searchTerm = e.target.value; \n    setSearchTerm(searchTerm); \n  }\n\n  function handleSearchButtonClick() { \n    fetch(`/api/search?q=${searchTerm}`)\n    .then(data => data.json())\n    .then(response => { \n      setIsSearched(true); \n      setSearchedTweets(response.statuses);\n      setSearchTerm('');\n     })\n    .catch(error => console.log(error))\n  }\n\n\n\n//TODO: need to think of a better way of doing this\n  function displayTweets() { \n    if (isSearched) { \n      return searchedTweets.map(tweet => (\n        <li key={tweet.id}>{tweet.text}</li>\n      ))\n    }\n\n    return localTrendingTweets.map((trend, idx) => (\n      <li key={idx}>{trend.name}</li>\n    ))\n  }\n\n\n  return (<>\n    <br/>\n    <input \n      type=\"text\" \n      placeholder=\"search twitter...\"\n      onChange={handleSearchChange} \n      value={searchTerm}/>\n    <button onClick={handleSearchButtonClick}>Search</button>\n    <ul>\n      {displayTweets()}\n    </ul>\n  </>)\n}","import {useState, useEffect} from \"react\"; \nimport NavBar from \"../NavBar/NavBar\"; \nimport TweetSearch from '../TweetSearch/TweetSearch'; \nimport NewTweet from \"../Tweets/NewTweet/NewTweet\"; \n\nexport default function Home(props) { \n  const [profileImageUrl, setProfileImageUrl] = useState(''); \n  const [homeTimelineTweets, setHomeTimelineTweets] = useState([]); \n  const {setIsLoggedIn} = props; \n  \n  // useEffect(() => { \n  //   fetch(`/api/profile-picture`)\n  //   .then(data => data.json())\n  //   .then(response => {\n  //     setProfileImageUrl(response); \n  //   })\n  //   .catch(error => console.error(error))\n  // }, [])\n\n  useEffect(() => { \n    getTimelineTweets(); \n  }, [])\n\n\n  function getTimelineTweets() { \n    fetch(`/api/home-timeline`)\n    .then(data => data.json())\n    .then(response => { \n      \n      if (response.errors) { \n        alert(response.errors[0].message);\n        console.error(response.errors[0].message); \n        return; \n      }\n\n      if (response) { \n        setHomeTimelineTweets(response); \n      }\n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n  }\n\n\n\n  return(<>\n    <NavBar logout={() => setIsLoggedIn(false)}/>\n    {/*TweetCard*/}\n    <h1>Home</h1>\n    {/* <img src={profileImageUrl} alt=\"profile-pic\"/>  */}\n    <NewTweet getTweets={getTimelineTweets}/>\n\n    {/*Timeline */}\n    <ul>\n      {homeTimelineTweets.map(tweet => (\n        <li key={tweet.id}>{tweet.text}</li>\n      ))}\n    </ul>\n\n    <TweetSearch />\n  </>); \n}","\nexport default function Details({details, onEditButtonClick}) { \n\n  if (!details) { \n    return <p>Loading...</p>\n  }\n\n  return (<>\n    <h1>Profile</h1>\n    <img src={details.profile_banner_url} alt=\"profile-banner\"/>\n    <img src={details.profile_image_url} alt=\"profile-pic\"/> \n    <button onClick={onEditButtonClick}>Edit profile</button>\n    <p><strong>{details.name}</strong></p>\n    <p>{details.screen_name}</p>\n    <p>{details.description}</p>\n    <p>{details.created_at}</p>\n    <p>Following {details.friends_count}</p>\n    <p>Followers {details.followers_count}</p>\n    <ul>\n      {/*tweets*/}\n    </ul>\n  </>);\n}","import {useEffect, useState} from 'react'; \nimport Details from \"./Details/Details\";\nimport NavBar from \"../NavBar/NavBar\"; \nimport Modal from \"../Util/UI/Modals/Modal\";\nimport TweetSearch from \"../TweetSearch/TweetSearch\"; \n\n\n\nexport default function Profile(props) { \n  const { setIsLoggedIn } = props; \n  const [profileDetails, setProfileDetails] = useState(null); \n  const [showModal, setShowModal] = useState(false);  \n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [profileImageUrl, setProfileImageUrl] = useState('')\n  useEffect(() => { \n    getProfileDetails(); \n  }, []);\n\n  function getProfileDetails() { \n    fetch('api/profile-details')\n    .then(data => data.json())\n    .then(response => { \n      setName(response.name);\n      setDescription(response.description);\n      setProfileImageUrl(response.profile_image_url);\n      setProfileDetails(response);\n      \n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    \n  }\n\n  function handleEditProfileClick() { \n   \n    setShowModal(true);\n  }\n\n  function handleCloseModalClick(event) { \n    const isBackDropClicked = event.target.id === \"ModalBackDrop\"; \n    const isCloseButtonClicked = event.target.id === \"ModalCloseButton\"; \n\n    if (isBackDropClicked || isCloseButtonClicked) { \n      setShowModal(false); \n    }\n  }\n\n  function handleEditProfileSubmit(event){ \n    event.preventDefault();\n    fetch(`/api/profile-update?name=${name}&description=${description}`, { \n      method: \"POST\"\n    })\n    .then(data => {\n        return data.json()\n    })\n    .then(response => { \n      if (response) { \n        setName(response.name);\n        setDescription(response.description);\n        setProfileDetails(response);\n      }\n    })\n    .catch(error => { \n      alert(`There was the following network error ${error}`)\n      console.error(error); \n    })\n    .finally(() => setShowModal(false));\n  }\n\n  function handleDescriptionChange(event) { \n    const newDescription = event.target.value; \n    setDescription(newDescription);\n  }\n\n  function handleNameChange(event) { \n    const newName = event.target.value; \n    setName(newName); \n  }\n\n\n  return(<>\n    <Modal show={showModal} close={handleCloseModalClick}>\n      <h1>Edit Profile</h1> \n      <form onSubmit={handleEditProfileSubmit}>\n          <input type=\"file\"/>\n          <br />\n          <img src={profileImageUrl}/>\n          <br />\n          <input onChange={handleNameChange} value={name}/>\n          <br />\n          <textarea\n            rows=\"4\"\n            cols=\"50\"\n            onChange={handleDescriptionChange} value={description}>\n          </textarea>\n          <br />\n          <input type=\"submit\" value=\"Save\"/>\n      </form>\n    </Modal>\n    <NavBar logout={() => setIsLoggedIn(false)}/>\n\n    <Details \n      details={profileDetails}\n      onEditButtonClick={handleEditProfileClick}\n    />\n    <TweetSearch />\n  </>); \n}","import { \n  Route, \n  Redirect,\n} from \"react-router-dom\"; \n\nexport default function ProtectedRoute(props) { \n  const { children, isLoggedIn } = props; \n  return( \n    <Route\n      render={({location}) => \n        isLoggedIn ? ( \n          children\n        ) : ( \n          <Redirect \n           to={{\n             pathname: \"/\", \n             state: { from: location }\n           }}\n          />\n        )\n      }\n    />\n  );\n\n}","import { useEffect } from \"react\"; \nimport { useHistory }  from \"react-router-dom\"; \nimport { \n  useLocation\n} from \"react-router-dom\"; \n\nexport default function GetCredentials(props) { \n  const {login} = props; \n  const location = useLocation(); \n  const history = useHistory(); \n  const params = new URLSearchParams(location.search);\n  const oauthToken = params.get('oauth_token'); \n  const oauthVerifier = params.get('oauth_verifier');\n \n\n  useEffect(() => { \n    fetch(`/api/access-token?oauth_token=${oauthToken}&oauth_verifier=${oauthVerifier}`)\n    .then(data => data.json())\n    .then(response => {\n     \n      if (response && Object.keys(response).length === 0) { \n        //TODO: refactor this to use throw\n        alert('Something went wrong. Do not press the reload putting while on this page')\n        console.error(`Response object is empty. This means that the user reloaded the get-credentials page \n        or something went wrong with the signing process`); \n        console.log('response object', response); \n        history.push('/'); \n      }\n      //TODO: make this safer\n      //Just temporality storing use auth information in local storage until \n      //I can figure out a more secure way of doing it without a DB\n      // for (const param in response) { \n      //   localStorage.setItem(param, response[param]); \n      // }\n    \n    })\n    .then(() => { \n      login(true); \n      history.push('/home'); \n    })\n    .catch(error => console.log(`Network error: ${error}`)); \n    //TODO: figure out what to do with this\n    // eslint-disable-next-line\n  }, [oauthToken, oauthVerifier])\n  \n\n  return (<h1>Loading your profile...</h1>);\n\n\n}","import {useState} from 'react'; \nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route\n} from \"react-router-dom\"; \nimport Login from \"./Components/Login/Login\"; \nimport Home from \"./Components/Home/Home\"; \nimport Profile from \"./Components/Profile/Profile\"; \nimport ProtectedRoute from \"./Components/Util/Auth/ProtectedRoute\"; \nimport GetCredentials from \"./Components/Util/Auth/GetCredentials\"; \nimport './App.css';\n\nfunction App() {\n  const initialState = () => Boolean(localStorage.getItem(\"screen_name\"));\n  const [isLoggedIn, setIsLoggedIn] = useState(initialState); \n\n\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login login={setIsLoggedIn}/>\n          </Route>\n          <Route exact path=\"/get-credentials\"> \n            <GetCredentials login={setIsLoggedIn}/>\n          </Route>\n          <ProtectedRoute exact path=\"/home\" isLoggedIn={isLoggedIn} >\n            <Home setIsLoggedIn={setIsLoggedIn} />\n          </ProtectedRoute>\n          <ProtectedRoute exact path=\"/profile\" isLoggedIn={isLoggedIn} >\n            <Profile setIsLoggedIn={setIsLoggedIn} />\n          </ProtectedRoute>\n        </Switch>\n    </Router>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}